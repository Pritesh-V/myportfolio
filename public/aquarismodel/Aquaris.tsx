/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 Aquaris.gltf 
Author: Arty Locksmith (https://sketchfab.com/artylocksmith)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/aquaris-536c520fbba247029cce4e1ee26891b6
Title: Aquaris
*/

import React, { JSX } from 'react'
import { useGLTF } from '@react-three/drei'
import { Mesh } from 'three'
import * as THREE from 'three'



type GLTFResult = {
  nodes: {
    body_base_metal_0: Mesh
    body_second_color_0: Mesh
    body_windows_light_0: Mesh
    body_darkness_0: Mesh
    engines_second_color_0: Mesh
    engines_engine_light_0: Mesh
    warp_ring_base_metal_0: Mesh
    warp_ring_engine_light_0: Mesh
    warp_ring_part1_second_color_0: Mesh
    dock_part1_second_color_0: Mesh
    dock_part2_second_color_0: Mesh
    belly_pipes_base_metal_0: Mesh
    warp_ring_part3_second_color_0: Mesh
    warp_ring_part2_second_color_0: Mesh
  }
  materials: {
    base_metal: THREE.Material
    second_color: THREE.Material
    windows_light: THREE.Material
    darkness: THREE.Material
    engine_light: THREE.Material
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('public/aquarismodel/Aquaris.gltf')as unknown as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group scale={0.01}>
        <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
          <mesh geometry={nodes.body_base_metal_0.geometry} material={materials.base_metal} />
          <mesh geometry={nodes.body_second_color_0.geometry} material={materials.second_color} />
          <mesh geometry={nodes.body_windows_light_0.geometry} material={materials.windows_light} />
          <mesh geometry={nodes.body_darkness_0.geometry} material={materials.darkness} />
        </group>
        <group position={[0, 2.625, -4983.61]} scale={106.75}>
          <mesh geometry={nodes.engines_second_color_0.geometry} material={materials.second_color} />
          <mesh geometry={nodes.engines_engine_light_0.geometry} material={materials.engine_light} />
        </group>
        <group position={[0, 0, -4217.094]} scale={100}>
          <mesh geometry={nodes.warp_ring_base_metal_0.geometry} material={materials.base_metal} />
          <mesh geometry={nodes.warp_ring_engine_light_0.geometry} material={materials.engine_light} />
        </group>
        <mesh geometry={nodes.warp_ring_part1_second_color_0.geometry} material={materials.second_color} position={[0, -9.756, -4211.179]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.dock_part1_second_color_0.geometry} material={materials.second_color} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.dock_part2_second_color_0.geometry} material={materials.second_color} position={[0, 0, -119.749]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.belly_pipes_base_metal_0.geometry} material={materials.base_metal} position={[0, 98.847, 123.054]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
        <mesh geometry={nodes.warp_ring_part3_second_color_0.geometry} material={materials.second_color} position={[0, 0, -4217.094]} scale={100} />
        <mesh geometry={nodes.warp_ring_part2_second_color_0.geometry} material={materials.second_color} position={[0, -9.756, -4363.989]} rotation={[-Math.PI / 2, 0, 0]} scale={100} />
      </group>
    </group>
  )
}

useGLTF.preload('/Aquaris.gltf')
